<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Card Wars Kingdom - Admin</title>
    <link rel="shortcut icon" href="https://i.postimg.cc/522JrMVz/AT-Card-Wars2-Logo-Eng-1.png"/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --background-color: #f5f6fa;
            --text-color: #2c3e50;
            --card-bg: white;
            --border-color: #eee;
            --input-bg: #f8f9fa;
            --input-border: #e9ecef;
            --shadow-color: rgba(0,0,0,0.1);
        }

        [data-theme="dark"] {
            --primary-color: #1a1a1a;
            --secondary-color: #2980b9;
            --accent-color: #c0392b;
            --background-color: #121212;
            --text-color: #ffffff;
            --card-bg: #1e1e1e;
            --border-color: #333;
            --input-bg: #2d2d2d;
            --input-border: #404040;
            --shadow-color: rgba(0,0,0,0.3);
        }

        body {
            background: var(--background-color);
            color: var(--text-color);
            transition: background-color 0.3s, color 0.3s;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
        }

        .login-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            position: relative;
        }

        .theme-toggle {
            position: absolute;
            top: 40px;
            right:360px;
            background: none;
            border: none;
            color: var(--text-color);
            cursor: pointer;
            padding: 12px;
            border-radius: 50%;
            transition: all 0.3s ease;
            font-size: 1.2rem;
        }

        .theme-toggle:hover {
            background: var(--shadow-color);
            transform: rotate(15deg);
        }

        .login-card {
            background: var(--card-bg);
            border-radius: 20px;
            box-shadow: 0 15px 30px var(--shadow-color);
            padding: 40px;
            width: 100%;
            max-width: 400px;
            transform: translateY(0);
            transition: all 0.3s ease;
            border: 1px solid var(--border-color);
        }

        .login-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px var(--shadow-color);
        }

        .login-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .login-header img {
            width: 150px;
            margin-bottom: 20px;
            filter: drop-shadow(0 5px 10px var(--shadow-color));
        }

        .form-control {
            background: var(--input-bg);
            border: 2px solid var(--input-border);
            border-radius: 12px;
            padding: 15px;
            color: var(--text-color);
            transition: all 0.3s ease;
            font-size: 1rem;
        }

        .form-control:focus {
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
            background: var(--card-bg);
        }

        .btn-login {
            background: var(--secondary-color);
            border: none;
            border-radius: 12px;
            padding: 15px;
            font-weight: 600;
            width: 100%;
            margin-top: 20px;
            transition: all 0.3s ease;
            font-size: 1.1rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .btn-login:hover {
            background: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px var(--shadow-color);
        }

        .admin-panel {
            display: none;
            padding: 20px;
        }

        .admin-header {
            background: var(--card-bg);
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border-color: var(--border-color);
        }

        .downloads-list {
            background: var(--card-bg);
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border-color: var(--border-color);
        }

        .download-item {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
            transition: all 0.3s ease;
            background: var(--card-bg);
            border-color: var(--border-color);
        }

        .download-item:hover {
            transform: translateX(5px);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .btn-add {
            background: var(--secondary-color);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            transition: all 0.3s ease;
        }

        .btn-add:hover {
            background: #2980b9;
            transform: translateY(-2px);
        }

        .modal-content {
            border-radius: 15px;
        }

        .modal-header {
            background: var(--primary-color);
            color: white;
            border-radius: 15px 15px 0 0;
        }

        .error-message {
            color: var(--accent-color);
            text-align: center;
            margin-top: 15px;
            display: none;
            font-weight: 500;
        }

        .loading {
            display: none;
            text-align: center;
            margin-top: 20px;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid var(--input-border);
            border-top: 4px solid var(--secondary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .form-label {
            color: var(--text-color);
            font-weight: 500;
            margin-bottom: 8px;
        }

        .version-input-group {
            display: flex;
            gap: 10px;
        }

        .version-input-group input {
            flex: 1;
        }
    </style>
</head>
<body>
    <div class="login-container">
       
        <div class="login-card">
            <div class="login-header">
                <img src="/AT_CardWars2_Logo_Eng.png" alt="Card Wars Kingdom Logo">
                <h2>Admin Login</h2>
            </div>
            <form id="loginForm" action="/admin/login" method="POST">
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" class="form-control" id="username" name="username" required>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                </div>
                <button type="submit" class="btn btn-login">Login</button>
                <div class="error-message" id="errorMessage"></div>
            </form>
        </div>
    </div>

    <div class="admin-panel" id="adminPanel">
        <div class="admin-header">
            <div class="d-flex justify-content-between align-items-center">
                <h2>Download Links Management</h2>
                <div class="d-flex align-items-center gap-2">
                    <button class="btn btn-add me-2" data-bs-toggle="modal" data-bs-target="#downloadModal">
                        <i class="fas fa-plus"></i> Add New Download
                    </button>
                    
                    <button class="btn btn-logout" onclick="logout()">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </button>
                </div>
            </div>
        </div>

        <div class="downloads-list" id="downloadsList">
            <!-- Downloads will be loaded here -->
        </div>
    </div>

    <!-- Download Modal -->
    <div class="modal fade" id="downloadModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add/Edit Download Link</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="downloadForm">
                        <input type="hidden" id="downloadId">
                        <div class="mb-3">
                            <label class="form-label">Platform</label>
                            <select class="form-select" id="platform" required>
                                <option value="windows">Windows</option>
                                <option value="android">Android</option>
                                <option value="ios">iOS/iPad</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Version</label>
                            <input type="number" class="form-control" id="version" placeholder="Enter version number" min="0" step="0.1" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Download URL</label>
                            <input type="url" class="form-control" id="downloadUrl">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">File Upload</label>
                            <input type="file" class="form-control" id="file">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" id="description" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">File Size</label>
                            <input type="text" class="form-control" id="fileSize" placeholder="e.g., 100MB">
                        </div>
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="isActive" checked>
                            <label class="form-check-label">Active</label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="saveDownload()">Save</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Check for error in URL
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get('error');
        if (error) {
            alert(error);
        }

        // Check if already logged in
        fetch('/api/admin/downloads')
            .then(response => {
                if (response.ok) {
                    showAdminPanel();
                    loadDownloads();
                }
            })
            .catch(() => {
                // Not logged in, show login form
            });

        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            
            try {
                const response = await fetch('/admin/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ username, password })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    window.location.href = data.redirect;
                } else {
                    alert(data.error || 'Invalid credentials');
                }
            } catch (error) {
                console.error('Login error:', error);
                alert('Login failed. Please try again.');
            }
        });

        function showAdminPanel() {
            document.querySelector('.login-container').style.display = 'none';
            document.getElementById('adminPanel').style.display = 'block';
        }

        async function loadDownloads() {
            try {
                const response = await fetch('/api/admin/downloads');
                const downloads = await response.json();
                const downloadsList = document.getElementById('downloadsList');
                
                downloadsList.innerHTML = downloads.map(download => `
                    <div class="download-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5>${download.platform} - ${download.version}</h5>
                                <p class="mb-1">${download.description || ''}</p>
                                <small class="text-muted">Size: ${download.fileSize || 'N/A'}</small>
                            </div>
                            <div>
                                <button class="btn btn-sm btn-primary me-2" onclick="editDownload(${download._id})">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="deleteDownload(${download._id})">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading downloads:', error);
            }
        }

        async function saveDownload() {
            const formData = new FormData();
            const downloadId = document.getElementById('downloadId').value;
            const file = document.getElementById('file').files[0];

            formData.append('platform', document.getElementById('platform').value);
            formData.append('version', document.getElementById('version').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('fileSize', document.getElementById('fileSize').value);
            formData.append('isActive', document.getElementById('isActive').checked);
            
            if (file) {
                formData.append('file', file);
            } else {
                formData.append('downloadUrl', document.getElementById('downloadUrl').value);
            }

            try {
                const url = downloadId ? 
                    `/api/admin/downloads/${downloadId}` : 
                    '/api/admin/downloads';
                
                const response = await fetch(url, {
                    method: downloadId ? 'PUT' : 'POST',
                    body: formData
                });

                if (response.ok) {
                    bootstrap.Modal.getInstance(document.getElementById('downloadModal')).hide();
                    loadDownloads();
                    document.getElementById('downloadForm').reset();
                }
            } catch (error) {
                console.error('Error saving download:', error);
            }
        }

        async function editDownload(id) {
            try {
                const response = await fetch(`/api/admin/downloads/${id}`);
                const download = await response.json();
                
                document.getElementById('downloadId').value = download._id;
                document.getElementById('platform').value = download.platform;
                document.getElementById('version').value = download.version;
                document.getElementById('downloadUrl').value = download.downloadUrl;
                document.getElementById('description').value = download.description || '';
                document.getElementById('fileSize').value = download.fileSize || '';
                document.getElementById('isActive').checked = download.isActive;

                new bootstrap.Modal(document.getElementById('downloadModal')).show();
            } catch (error) {
                console.error('Error loading download:', error);
            }
        }

        async function deleteDownload(id) {
            if (confirm('Are you sure you want to delete this download?')) {
                try {
                    const response = await fetch(`/api/admin/downloads/${id}`, {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        loadDownloads();
                    }
                } catch (error) {
                    console.error('Error deleting download:', error);
                }
            }
        }

        // Theme toggle functionality
        const themeToggle = document.getElementById('themeToggle');
        const themeIcon = themeToggle.querySelector('i');
        
        // Check for saved theme preference
        const savedTheme = localStorage.getItem('theme') || 'light';
        document.documentElement.setAttribute('data-theme', savedTheme);
        updateThemeIcon(savedTheme);

        themeToggle.addEventListener('click', () => {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            document.documentElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            updateThemeIcon(newTheme);
        });

        function updateThemeIcon(theme) {
            themeIcon.className = theme === 'light' ? 'fas fa-moon' : 'fas fa-sun';
        }

        // Logout functionality
        async function logout() {
            try {
                const response = await fetch('/api/admin/logout', {
                    method: 'POST'
                });
                if (response.ok) {
                    window.location.reload();
                }
            } catch (error) {
                console.error('Error logging out:', error);
            }
        }
    </script>
</body>
</html> 